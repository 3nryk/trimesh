language: python
sudo: required
dist: trusty

python:
- '2.7'
- '3.3'
- '3.4'
- '3.5'
- '3.6'

before_deploy:
- sudo apt-get install pandoc -y
- pip install pypandoc

deploy:
  provider: pypi
  user: mikedh
  password:
    secure: HbsOtokNjlpRE98DpeeX1uPzMR3XWZbovtyPA2gS4eobkod7YyBXDgj30uOwcMvJMo4sX7Fi3X59qY43qHLiftTFhaMtN4+E1N0HaVVfmTi/Iv/L4qd4gMjCjg6M7N1wiCmYA+ceB8pAGOzLoo2K2uXixBfkeQjxUZjKTHfQYlM
  on:
      branch: master
      
before_install:
- sudo apt-get update
- sudo apt-get install -y libgeos-dev libspatialindex-dev openscad blender

install:
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda config --add channels conda-forge  # rtree, shapely, pyembree
  - conda update -q conda
  - conda info -a
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy scipy
  - source activate test-environment
  - conda install -c conda-forge scikit-image
  - if [[ "$TRAVIS_PYTHON_VERSION" != "3.3" && "$TRAVIS_PYTHON_VERSION" != "3.4" ]]; then conda install pyembree rtree shapely && pip install .[all]; else pip install .[easy]"; fi
  - pip install nose2

script: 
- cd tests
- nose2
- cd ../examples
- for f in *.ipynb; do python ../tests/notebook_run.py "$f"; done
- cd ..
